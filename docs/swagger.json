{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Production-ready URL shortening service with Redis persistence, caching, rate limiting, and comprehensive management features.",
        "title": "Short URL Generator API",
        "termsOfService": "https://github.com/yourusername/short-url-generator",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/yourusername/short-url-generator/issues",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "2.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/cache/metrics": {
            "get": {
                "description": "Returns cache performance metrics including hit rate, misses, and evictions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Cache performance metrics",
                "responses": {
                    "200": {
                        "description": "Cache metrics",
                        "schema": {
                            "$ref": "#/definitions/model.CacheMetricsResponse"
                        }
                    },
                    "503": {
                        "description": "Cache is disabled",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns service health status and Redis connectivity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "$ref": "#/definitions/model.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service is unhealthy",
                        "schema": {
                            "$ref": "#/definitions/model.HealthResponse"
                        }
                    }
                }
            }
        },
        "/qr/{shortURL}": {
            "get": {
                "description": "Generates a QR code image (PNG) for the short URL with customizable size and error correction level",
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "URLs"
                ],
                "summary": "Generate QR code",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"abc123xy\"",
                        "description": "Short URL code",
                        "name": "shortURL",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 256,
                        "example": 512,
                        "description": "QR code size in pixels (128-1024)",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "highest"
                        ],
                        "type": "string",
                        "default": "medium",
                        "example": "high",
                        "description": "Error correction level: low, medium, high, highest",
                        "name": "level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid size or level parameter",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Short URL not found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to generate QR code",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/shorten": {
            "post": {
                "description": "Shortens a URL with optional expiry time, usage limits, and custom slug. Expiry must be in RFC3339 format with timezone (e.g., 2024-12-31T23:59:59+03:30 for Iran time, or Z for UTC). Supports URL deduplication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URLs"
                ],
                "summary": "Create a short URL",
                "parameters": [
                    {
                        "description": "URL shortening request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned existing short URL (deduplication)",
                        "schema": {
                            "$ref": "#/definitions/model.CreateResponse"
                        }
                    },
                    "201": {
                        "description": "Successfully created short URL",
                        "schema": {
                            "$ref": "#/definitions/model.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request (bad URL, invalid expiry, etc.)",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Custom slug already taken (includes suggestions)",
                        "schema": {
                            "$ref": "#/definitions/model.SlugConflictResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/shorten/{managementID}": {
            "put": {
                "description": "Updates the destination URL of a short URL. Requires managementID (from creation), shortURL, and original URL for multi-factor validation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Management"
                ],
                "summary": "Update URL destination",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Management ID (UUID from creation response)",
                        "name": "managementID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update request with validation credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL updated successfully",
                        "schema": {
                            "$ref": "#/definitions/model.UpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing fields",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Validation failed (mismatched credentials)",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Management ID or short URL not found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "410": {
                        "description": "URL has expired",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Permanently deletes a short URL. Requires managementID (from creation), shortURL, and original URL for 3-factor validation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Management"
                ],
                "summary": "Delete a short URL",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"550e8400-e29b-41d4-a716-446655440000\"",
                        "description": "Management ID (UUID from creation response)",
                        "name": "managementID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Delete request with validation credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "URL deleted successfully (no content)"
                    },
                    "400": {
                        "description": "Invalid request body or missing fields",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Validation failed (mismatched credentials)",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Management ID or short URL not found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{shortURL}": {
            "get": {
                "description": "Redirects to the original URL associated with the short URL. Increments usage counter and logs access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URLs"
                ],
                "summary": "Redirect to original URL",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"abc123xy\"",
                        "description": "Short URL code",
                        "name": "shortURL",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Redirect to original URL"
                    },
                    "403": {
                        "description": "Usage limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Short URL not found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "410": {
                        "description": "URL has expired",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CacheMetricsResponse": {
            "description": "Cache performance metrics including hit rate and evictions",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "example": true
                },
                "evictions": {
                    "type": "integer",
                    "example": 12
                },
                "hitRatio": {
                    "type": "number",
                    "example": 0.957
                },
                "hits": {
                    "type": "integer",
                    "example": 1234
                },
                "keysAdded": {
                    "type": "integer",
                    "example": 1290
                },
                "misses": {
                    "type": "integer",
                    "example": 56
                }
            }
        },
        "model.CreateRequest": {
            "description": "Request body for creating a new short URL. Expiry time must be in RFC3339 format with timezone (e.g., 2024-12-31T23:59:59+03:30 for Iran time, or use Z for UTC)",
            "type": "object",
            "required": [
                "originalURL"
            ],
            "properties": {
                "customSlug": {
                    "type": "string",
                    "example": "my-link"
                },
                "expiry": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59+03:30"
                },
                "maxUsage": {
                    "type": "integer",
                    "example": 100
                },
                "originalURL": {
                    "type": "string",
                    "example": "https://example.com"
                }
            }
        },
        "model.CreateResponse": {
            "description": "Response after successfully creating a short URL",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00+03:30"
                },
                "expiry": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59+03:30"
                },
                "fullURL": {
                    "type": "string",
                    "example": "http://localhost:8080/abc123xy"
                },
                "managementID": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "maxUsage": {
                    "type": "integer",
                    "example": 100
                },
                "originalURL": {
                    "type": "string",
                    "example": "https://example.com"
                },
                "qrCodeURL": {
                    "type": "string",
                    "example": "http://localhost:8080/qr/abc123xy"
                },
                "shortURL": {
                    "type": "string",
                    "example": "abc123xy"
                }
            }
        },
        "model.DeleteRequest": {
            "description": "Request body for deleting a short URL",
            "type": "object",
            "required": [
                "originalURL",
                "shortURL"
            ],
            "properties": {
                "originalURL": {
                    "type": "string",
                    "example": "https://example.com"
                },
                "shortURL": {
                    "type": "string",
                    "example": "abc123xy"
                }
            }
        },
        "model.ErrorResponse": {
            "description": "Standard error response",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid URL format"
                }
            }
        },
        "model.HealthResponse": {
            "description": "Health check response showing service status",
            "type": "object",
            "properties": {
                "redis": {
                    "type": "string",
                    "example": "connected"
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "model.SlugConflictResponse": {
            "description": "Response when requested custom slug is already in use",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Custom slug already exists"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SlugSuggestion"
                    }
                }
            }
        },
        "model.SlugSuggestion": {
            "description": "Suggested alternative slug when requested slug is taken",
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean",
                    "example": true
                },
                "slug": {
                    "type": "string",
                    "example": "my-link-2"
                }
            }
        },
        "model.UpdateRequest": {
            "description": "Request body for updating the destination of a short URL",
            "type": "object",
            "required": [
                "newOriginalURL",
                "originalURL",
                "shortURL"
            ],
            "properties": {
                "newOriginalURL": {
                    "type": "string",
                    "example": "https://newexample.com"
                },
                "originalURL": {
                    "type": "string",
                    "example": "https://example.com"
                },
                "shortURL": {
                    "type": "string",
                    "example": "abc123xy"
                }
            }
        },
        "model.UpdateResponse": {
            "description": "Response after successfully updating a short URL",
            "type": "object",
            "properties": {
                "managementID": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "message": {
                    "type": "string",
                    "example": "URL updated successfully"
                },
                "newOriginalURL": {
                    "type": "string",
                    "example": "https://newexample.com"
                },
                "oldOriginalURL": {
                    "type": "string",
                    "example": "https://example.com"
                },
                "shortURL": {
                    "type": "string",
                    "example": "abc123xy"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-01-15T11:00:00+03:30"
                }
            }
        }
    },
    "tags": [
        {
            "description": "Operations for creating, redirecting, and managing short URLs",
            "name": "URLs"
        },
        {
            "description": "Secure operations for updating and deleting short URLs (requires managementID)",
            "name": "Management"
        },
        {
            "description": "Health checks and system metrics",
            "name": "System"
        }
    ]
}